{"version":3,"file":"static/js/230.2c6a9101.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm-styled.jsx","components/ContactForm/ContactForm .jsx","components/ContactList/ContactList-styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter-styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/Contacts-styled.jsx","pages/ContactsPage/Contacts.js"],"sourcesContent":["import { Field as FormikField, Form as FormikForm } from 'formik';\nimport styled from 'styled-components';\nimport { IoMdCloseCircle } from 'react-icons/io';\n\nexport const IconCloseModal = styled(IoMdCloseCircle)`\n  flex-shrink: 0;\n  fill: #ffffff;\n  transition: fill 300ms ease, scale 300ms ease;\n  &:hover {\n    fill: #454545;\n    scale: 1.1;\n  }\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const PlaceHolder = styled.span`\n  font-size: 13px;\n  position: absolute;\n  padding: 5px;\n  top: 5px;\n  left: 1px;\n  display: inline-block;\n  color: #000000;\n  pointer-events: none;\n  transition: transform 300ms, color 300ms;\n  @media screen and (min-width: 1280px) {\n    top: -3px;\n    font-size: 16px;\n    padding: 10px;\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  /* width: 170px;\n  height: 20px;\n  margin-left: 5px;\n  background-color: #d9d9d9;\n  border: none;\n  box-shadow: 0px 1px 0px rgb(0 0 0), 0px 1px 4px rgb(0 0 0 / 63%),\n    0px 2px 3px rgb(0 0 0 / 42%);\n  transition: background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: #5eb164;\n  } */\n  padding: 7px;\n  height: 100%;\n  width: 100%;\n  background-color: transparent;\n  transition: background-color 300ms ease;\n  border-radius: 10px;\n  outline: none;\n  border: none;\n  &:hover,\n  &:focus,\n  &:valid {\n    color: #000000;\n    background-color: #ff6000;\n  }\n  &:focus ~ ${PlaceHolder}, &:valid ~ ${PlaceHolder} {\n    color: #000000;\n    transform: translateY(-30px);\n  }\n  @media screen and (min-width: 768px) {\n    &:focus ~ ${PlaceHolder}, &:valid ~ ${PlaceHolder} {\n      color: #000000;\n      transform: translateY(-35px);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 130px;\n  height: 35px;\n  background-color: #454545;\n  border-radius: 8px;\n  color: white;\n  font-size: 14px;\n  border: none;\n  box-shadow: 0px 1px 7px rgb(255 255 255 / 58%),\n    0px 1px 8px rgb(76 76 76 / 67%), 0px 2px 3px rgb(0 0 0 / 47%);\n  transition: background-color 300ms ease, scale 300ms ease, color 300ms ease;\n  &:hover,\n  &:focus {\n    background-color: #ff6000;\n    color: #000000;\n    scale: 1.1;\n  }\n`;\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000080;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const ModalContainer = styled.div`\n  width: 450px;\n  height: 500px;\n  border-radius: 15px;\n  border: 5px solid white;\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  /* background-color: white; */\n  background: rgba(255, 255, 255, 0.12);\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 4px 30px;\n  backdrop-filter: blur(32px);\n  border-radius: 30px;\n`;\n\nexport const WrapperCloseBtn = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 25%;\n`;\n\nexport const BtnCloseModal = styled.button`\n  width: 35px;\n  height: 35px;\n  border-radius: 50px;\n  background-color: transparent;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  /* &:focus ~ ${IconCloseModal},&:hover ~ ${IconCloseModal} {\n    fill: #000000;\n  } */\n`;\n\nexport const BoxInput = styled.div`\n  position: relative;\n  height: 35px;\n  background-color: white;\n  min-width: 291px;\n  border-radius: 10px;\n  transition: background-color 300ms;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 25px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: 35px;\n    margin-bottom: 30px;\n  }\n`;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Field,\n  Button,\n  ModalOverlay,\n  ModalContainer,\n  WrapperCloseBtn,\n  BtnCloseModal,\n  PlaceHolder,\n  BoxInput,\n  IconCloseModal,\n} from './ContactForm-styled';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { createPortal } from 'react-dom';\n\nyup.addMethod(yup.string, 'numeric', function () {\n  return this.matches(/^\\d+$/, 'The field should have digits only');\n});\n\nconst schema = yup.object().shape({\n  name: yup.string().min(3).required(),\n  number: yup.string().numeric().min(12).required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = ({ modal }) => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const errorFetch = useSelector(state => state.contacts.error);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${values.name} is already in contacts.`);\n    }\n    try {\n      await dispatch(addContact(values));\n      modal(false);\n      toast.success('Контакт додано успішно');\n    } catch (error) {\n      toast.error(`Помилка ${errorFetch}, контакт не доданий`);\n    }\n    resetForm();\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      modal(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      modal(false);\n      console.log('ESC');\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  return createPortal(\n    <ModalOverlay onClick={handleBackdropClick}>\n      <ModalContainer>\n        <WrapperCloseBtn>\n          <div>\n            <BtnCloseModal onClick={() => modal(false)}>\n              <IconCloseModal size={35} />\n            </BtnCloseModal>\n          </div>\n        </WrapperCloseBtn>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <Form>\n            <div style={{ width: '87%' }}>\n              <BoxInput style={{ marginBottom: '60px' }}>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  // placeholder=\"Enter your name...\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                />\n                <ErrorMessage\n                  name=\"name\"\n                  component=\"span\"\n                  style={{ color: '#ffff00d6', fontSize: '15px' }}\n                />\n                <PlaceHolder>Enter your name...</PlaceHolder>\n              </BoxInput>\n\n              <BoxInput>\n                <Field\n                  type=\"tel\"\n                  name=\"number\"\n                  // placeholder=\"Enter your tel...\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                />\n                <ErrorMessage\n                  name=\"number\"\n                  component=\"span\"\n                  style={{ color: '#ffff00d6', fontSize: '15px' }}\n                />\n                <PlaceHolder>Enter your tel...</PlaceHolder>\n              </BoxInput>\n            </div>\n            <div\n              style={{\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'space-evenly',\n              }}\n            >\n              <Button type=\"submit\">Add contact</Button>\n              <Button onClick={() => modal(false)} type=\"button\">\n                Cancel\n              </Button>\n            </div>\n          </Form>\n        </Formik>\n      </ModalContainer>\n    </ModalOverlay>,\n    document.body\n  );\n};\n","import styled from 'styled-components';\nimport { BsFillTelephoneForwardFill } from 'react-icons/bs';\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  margin-left: 8px;\n  width: 165px;\n  height: 40px;\n  background-color: #454545;\n  border-radius: 8px;\n  color: white;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 1px 7px rgb(255 255 255 / 58%),\n    0px 1px 8px rgb(76 76 76 / 67%), 0px 2px 3px rgb(0 0 0 / 47%);\n  transition: background-color 300ms ease, scale 300ms ease;\n  &:hover,\n  &:focus {\n    background-color: #ff6000;\n    color: white;\n    scale: 1.05;\n  }\n`;\nexport const List = styled.ul`\n  @media screen and (min-width: 768px) {\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\nexport const WrapperText = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  bottom: 0px;\n  left: 0px;\n  opacity: 0;\n  padding: 15px;\n  background: rgba(255, 255, 255, 0.12);\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 4px 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: translateY(101%);\n  transition: transform 650ms ease;\n`;\nexport const Item = styled.li`\n  list-style: none;\n  width: auto;\n  padding: 10px;\n  background-color: #ffe6c7;\n  border-radius: 10px;\n  border-bottom: 2px solid #454545;\n  transition: all 450ms ease-in-out;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  &:hover,\n  &:focus {\n    scale: 0.94;\n  }\n  &:hover ${WrapperText},&:focus ${WrapperText} {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  @media screen and (max-width: 767px) {\n    &:not(last-child) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  @media screen and (max-width: 767px) {\n    max-height: 500px;\n  }\n  @media screen and (min-width: 768px) {\n    max-height: 350px;\n  }\n`;\n\nexport const WrapperImg = styled.div`\n  position: relative;\n  overflow: hidden;\n  /* border-top-left-radius: 10px;\n  border-top-right-radius: 10px; */\n  /* border-bottom: none; */\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: black;\n`;\n\nexport const LinkTel = styled.a`\n  display: block;\n  color: #000000;\n  font-size: 18px;\n  text-align: center;\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #ff6000;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n  }\n`;\nexport const IconPhone = styled(BsFillTelephoneForwardFill)`\n  width: 15px;\n  height: 15px;\n  margin-right: 5px;\n  @media screen and (min-width: 768px) {\n    width: 15px;\n    height: 15px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 20px;\n  color: black;\n  margin-right: 20px;\n`;\n\nexport const WrapperInfo = styled.div`\n  display: flex;\n  width: 100%;\n`;\n","import React from 'react';\nimport {\n  Button,\n  List,\n  Item,\n  WrapperImg,\n  Img,\n  LinkTel,\n  IconPhone,\n  Title,\n  WrapperInfo,\n  Name,\n  WrapperText,\n} from './ContactList-styled';\nimport { getFilter } from '../../redux/contacts/filterSlice';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { user_icon } from 'media';\nimport { useState } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  const contact = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  const error = useSelector(state => state.contacts.error);\n\n  const filter = useSelector(getFilter);\n\n  const normalizedFilterSearch = filter.toLowerCase();\n  let filteredContact;\n\n  if (contact !== undefined && contact.length > 0) {\n    filteredContact = contact.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilterSearch)\n    );\n  }\n\n  return (\n    <>\n      {error && <p>Помилка `${error}`, спробуйте перезавантажити сторінку.</p>}\n      {filteredContact !== undefined && filteredContact.length >= 1 && (\n        <List>\n          {filteredContact.map(item => {\n            let telLink = `tel:${item.number}`;\n            return (\n              <Item key={item.id}>\n                <div style={{ position: 'relative', overflow: 'hidden' }}>\n                  <WrapperImg>\n                    <Img src={user_icon} alt=\"user icon\" />\n                    <WrapperText>\n                      {!showMenu && (\n                        <Button\n                          type=\"button\"\n                          onClick={() => {\n                            setShowMenu(true);\n                          }}\n                          disabled={isLoading}\n                        >\n                          Delete\n                        </Button>\n                      )}\n                      {showMenu && (\n                        <>\n                          <Button\n                            type=\"button\"\n                            onClick={() => {\n                              dispatch(deleteContact(item.id));\n                              toast.success('Deleted successfully');\n                            }}\n                            disabled={isLoading}\n                            style={{ marginRight: '10px' }}\n                          >\n                            Delete\n                          </Button>\n                          <Button\n                            type=\"button\"\n                            onClick={() => {\n                              setShowMenu(false);\n                            }}\n                            disabled={isLoading}\n                          >\n                            Cancel\n                          </Button>\n                        </>\n                      )}\n                    </WrapperText>\n                  </WrapperImg>\n                  <WrapperInfo>\n                    <Title>Name :</Title>\n                    <Name>{item.name}</Name>\n                  </WrapperInfo>\n                  <WrapperInfo>\n                    <Title>Phone :</Title>\n                    <LinkTel href={telLink}>\n                      <IconPhone /> {item.number}\n                    </LinkTel>\n                  </WrapperInfo>\n                </div>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { DebounceInput } from 'react-debounce-input';\nimport { ImSearch } from 'react-icons/im';\n\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 600;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n  align-items: center;\n`;\n\nexport const SearchIcon = styled(ImSearch)`\n  margin-left: 10px;\n  margin-right: 10px;\n  position: absolute;\n  top: 10px;\n`;\n\nexport const BoxInput = styled.div`\n  position: relative;\n  height: 35px;\n  background-color: transparent;\n  width: 600px;\n  border-radius: 10px;\n  transition: background-color 300ms;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 25px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    height: 35px;\n    margin-bottom: 30px;\n  }\n`;\nexport const PlaceHolder = styled.span`\n  font-size: 13px;\n  position: absolute;\n  padding: 5px;\n  top: 5px;\n  left: 25px;\n  display: inline-block;\n  color: #000000;\n  pointer-events: none;\n  transition: transform 300ms, color 300ms;\n  @media screen and (min-width: 1280px) {\n    top: -3px;\n    font-size: 16px;\n    padding: 10px;\n  }\n`;\nexport const Input = styled(DebounceInput)`\n  padding: 7px;\n  padding-left: 30px;\n  height: 100%;\n  width: 100%;\n  background-color: #e6e6e65c;\n  transition: background-color 300ms ease;\n  border-radius: 15px;\n  outline: none;\n  border: none;\n  border-bottom: 3px solid #454545;\n  border-top: 1px solid #454545;\n  &:hover,\n  &:focus {\n    color: #000000;\n    background-color: #e6e6e6a9;\n  }\n  &:focus ~ ${PlaceHolder}, &:hover ~ ${PlaceHolder} {\n    color: #000000;\n    transform: translateY(-30px);\n  }\n  @media screen and (min-width: 768px) {\n    &:focus ~ ${PlaceHolder},&:hover ~ ${PlaceHolder} {\n      color: #000000;\n      /* transform: translateY(-35px); */\n    }\n  }\n`;\n","import React from 'react';\nimport { Input, SearchIcon, BoxInput, PlaceHolder } from './Filter-styled';\nimport { foundedContact } from '../../redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = e => {\n    dispatch(foundedContact(e.target.value));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n      }}\n    >\n      <BoxInput>\n        <SearchIcon />\n        <Input\n          minLength={1}\n          debounceTimeout={300}\n          type=\"text\"\n          onChange={onChange}\n          value={filter}\n          // placeholder=\"Search by name...\"\n        />\n        <PlaceHolder>Please enter search query</PlaceHolder>\n      </BoxInput>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  /* background-color: #ffa559; */\n  padding-top: 50px;\n  padding-bottom: 50px;\n  background: #ff7e5f; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #feb47b,\n    #ff7e5f\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #feb47b,\n    #ff7e5f\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`;\n\nexport const MainTitle = styled.h2`\n  color: black;\n  font-size: 32px;\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 50px;\n`;\n\nexport const ButtonContactForm = styled.button`\n  min-width: 130px;\n  height: 40px;\n  border-radius: 15px;\n  border: none;\n  background-color: #454545;\n  color: white;\n  transition: background-color 300ms ease, scale 300ms ease;\n  &:hover,\n  &:focus {\n    background-color: #ff6000;\n    scale: 1.1;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from '../../components/ContactForm/ContactForm ';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ColorRing } from 'react-loader-spinner';\nimport { Section, MainTitle, ButtonContactForm } from './Contacts-styled';\nimport { Container } from 'styles/Container-styled';\n\nexport default function Tasks() {\n  const [showContactForm, setShowContactForm] = useState(false);\n  const dispatch = useDispatch();\n  const contact = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleForm = () => {\n    setShowContactForm(true);\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n        {/* <div>{isLoading && 'Request in progress...'}</div> */}\n        <MainTitle>\n          Dear user, on this page you can work with your contacts\n        </MainTitle>\n        <ButtonContactForm onClick={handleForm}>Add contact</ButtonContactForm>\n        {showContactForm && <ContactForm modal={setShowContactForm} />}\n        {isLoading && <ColorRing />}\n        {contact !== undefined && contact.length > 0 ? (\n          <>\n            {<Filter />}\n            {<ContactList />}\n          </>\n        ) : (\n          <p>No contacts here ...</p>\n        )}\n      </Container>\n    </Section>\n  );\n}\n"],"names":["IconCloseModal","styled","IoMdCloseCircle","Form","FormikForm","PlaceHolder","Field","FormikField","Button","ModalOverlay","ModalContainer","WrapperCloseBtn","BtnCloseModal","BoxInput","yup","this","matches","schema","shape","name","min","required","number","numeric","initialValues","ContactForm","modal","dispatch","useDispatch","contacts","useSelector","state","items","errorFetch","error","handleSubmit","values","resetForm","some","contact","toLowerCase","toast","addContact","handleKeyDown","e","code","console","log","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","event","currentTarget","target","size","onSubmit","validationSchema","style","width","marginBottom","type","title","component","color","fontSize","display","justifyContent","document","body","List","WrapperText","Item","Img","WrapperImg","Name","LinkTel","IconPhone","BsFillTelephoneForwardFill","Title","WrapperInfo","ContactList","filteredContact","useState","showMenu","setShowMenu","isLoading","normalizedFilterSearch","getFilter","undefined","length","filter","includes","map","item","telLink","position","overflow","src","user_icon","alt","disabled","deleteContact","id","marginRight","href","SearchIcon","ImSearch","Input","DebounceInput","Filter","alignItems","minLength","debounceTimeout","onChange","foundedContact","value","Section","MainTitle","ButtonContactForm","Tasks","showContactForm","setShowContactForm","fetchContacts","Helmet"],"sourceRoot":""}